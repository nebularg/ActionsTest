name: luacheck
description: Runs luacheck.
branding:
  icon: check-square
  color: yellow
inputs:
  files:
    description: >
      A list of files, rockspecs, or directories to be checked.

      Defaults to the workspace path as set by the `path` input.
    required: false
    default: '.'
  path:
    description: >
      The working directory for luacheck.

      The file list should be relative to this path and output
      filenames be displayed relative to this path.

      Defaults to the workspace path.
    required: false
    default: ${{ github.workspace }}
  args:
    description: >
      Additional command-line arguments.

      See https://luacheck.readthedocs.io/en/stable/cli.html
    required: false
  config:
    description: >
      URL to a custom configuration (`.luacheckrc`) file that will be
      used as the default configuration file.
    required: false
runs:
  using: composite
  steps:
    - run: |
        echo "##[group]Install luacheck"
        if ! hash luacheck &>/dev/null; then
          sudo apt-get install -yq luarocks 1>/dev/null || exit 1
          sudo luarocks install luacheck 1>/dev/null || exit 1
          sudo luarocks install lanes &>/dev/null || true
        fi
        echo "##[command]luacheck --version"
        luacheck --version
        echo "##[endgroup]"
      shell: bash
    - run: |
        [ -z "${{ inputs.config }}" ] && exit 0
        mkdir -p ~/.config/luacheck
        curl -fsSL "${{ inputs.config }}" -o ~/.config/luacheck/.luacheckrc || {
          echo "Unable to download \"${{ inputs.config }}\"" >&2
          exit 1
        }
      shell: bash
    - run: |
        luacheck ${{ inputs.args }} -- ${{ inputs.files }} | awk -F':' '
          { print; gsub(/\x1B\[[0-9]{1,2}m/,"") } # remove formatting after printing
          match($0, /^Checking .*[0-9] (warning|error)s?$/, m) { level = m[1] } # set the level
          /^\s+.+?:[0-9]+:[0-9]+: / {
            gsub(/^\s+|\s+$/, "") # trim whitespace
            output[count++] = sprintf("::%s file=%s,line=%s,col=%s::luacheck:%s", level, $1, $2, $3, $4)
          }
          END {
            if (count > 0) {
              print ""
              for (i = 0; i <= count; i++) {
                print output[i]
              }
            }
          }'
      working-directory: ${{ inputs.path }}
      shell: bash
